import{_ as s,c as a,a as n,o as t}from"./app-DXtwkRhK.js";const e={};function h(p,i){return t(),a("div",null,i[0]||(i[0]=[n(`<p>推荐来源：<a href="https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/C/Duke-Coursera-Intro-C/" target="_blank" rel="noopener noreferrer">CSdiy, Introductory C Programming Specialization</a></p><p>官方课程地址：<a href="https://www.coursera.org/specializations/c-programming" target="_blank" rel="noopener noreferrer">Duke, Introductory C Programming Specialization</a></p><p>B站视频地址：<a href="https://www.bilibili.com/video/BV1Kp42117vh/?p=26&amp;share_source=copy_web&amp;vd_source=7b952f197435de82efe1dabbfc57b22b" target="_blank" rel="noopener noreferrer">B站, Introductory C Programming Specialization </a></p><h2 id="c中的类型和格式化输出" tabindex="-1"><a class="header-anchor" href="#c中的类型和格式化输出"><span>C中的类型和格式化输出</span></a></h2><p>按照常规认识进行格式化输出：</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">char</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> letter </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">G</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> negNumber </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">unsigned</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 33</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //无符号数字</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">My name begins with </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%c\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> letter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Look, I am negative! --&gt; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%d\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> negNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">I am </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> years old!</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 输出八进制</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in octal (base 8) = </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%o\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 输出16进制</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> in hex (base 16) = </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%x\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照非常规认识进行格式化输出：</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">char</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> letter </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">G</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> negNumber </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">unsigned</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 33</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //无符号数字</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// %d 输出 &#39;G&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">G&#39;s numeric value is </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%d\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> letter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-1 as hex(base 16) is </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%x\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> negNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-1 as an unsigned is </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%u\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> negNumber</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// %c 输出 33 对应的字符</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">33 as a letter is </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">%c\\n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>浮点数</strong></p><h2 id="typedef-用法" tabindex="-1"><a class="header-anchor" href="#typedef-用法"><span>typedef 用法</span></a></h2><p>背景：命名<strong>结构类型</strong>需要有 <code>struct</code> 关键字</p><p>用法一：使用 <code>typedef</code> 为<strong>结构类型</strong>定义新的名称</p><p>用法二：将 <code>struct</code> 声明和 typedef 合并为一个语句</p><p>用法三：省略 <code>struct</code> <strong>标签</strong>，生成一个没有标签的结构，并将这个结构命名为 <code>rect_t</code></p><p>typedef 不仅仅用于 struct ，<strong>案例</strong>：</p><p>编写代码处理RGB值，一开始规定RGB值是无符号数，现在想转变为无符号字符，需要在每一个定义处加上 char</p><p>使用 <code>typedef</code>, <strong>定义 无符号整数的别名</strong> 为 <code>rgb_t</code></p><p>即：<code>typedef unsigned int rgb_t;</code></p><p>如果 RGB 值想转变为无符号字符，只需要修改一个地方：</p><h2 id="枚举类型" tabindex="-1"><a class="header-anchor" href="#枚举类型"><span>枚举类型</span></a></h2><h2 id="make" tabindex="-1"><a class="header-anchor" href="#make"><span>make</span></a></h2><p><strong>make</strong> 进行编译</p><p>回顾一下，make 的输入是一个 Makefile，它包含一个或多个规则，<strong>这些规则</strong>指定了如何从其先决条件（它所依赖的文件）生成目标文件。 <strong>规则</strong>由目标指定、冒号和先决条件文件列表组成。在先决条件列表之后是换行符，然后是根据先决条件重建目标文件所需的命令。命令可以分多行显示，但每行必须以 TAB 字符开头（多个空格不起作用，不小心用空格代替 TAB 字符往往是 Makefile 出现问题的原因）。</p><p>运行 make 时，您可以指定要编译的特定目标（如果没有指定，make 会将 Makefile 中的第一个目标作为默认目标）。要编译目标，make 会首先检查它是否是最新的。要检查目标是否是最新的，首先需要确保每个先决条件都是最新的，并可能对其进行重建。当 make 遇到一个本身不属于任何规则目标的文件时，这个过程就结束了。这样的文件就是最新的。</p>`,24)]))}const k=s(e,[["render",h],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/posts/CProgram/","title":"C语言复习","lang":"zh-CN","frontmatter":{"title":"C语言复习","createTime":"2025/08/11 10:09:01","permalink":"/posts/CProgram/","tags":["学习","C语言","Linux内核"],"description":"推荐来源：CSdiy, Introductory C Programming Specialization 官方课程地址：Duke, Introductory C Programming Specialization B站视频地址：B站, Introductory C Programming Specialization C中的类型和格式化输出 按照常...","head":[["meta",{"property":"og:url","content":"https://cloudinwind.github.io/cloudinwindblog/cloudinwindblog/posts/CProgram/"}],["meta",{"property":"og:site_name","content":"小风"}],["meta",{"property":"og:title","content":"C语言复习"}],["meta",{"property":"og:description","content":"推荐来源：CSdiy, Introductory C Programming Specialization 官方课程地址：Duke, Introductory C Programming Specialization B站视频地址：B站, Introductory C Programming Specialization C中的类型和格式化输出 按照常..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-27T04:02:50.000Z"}],["meta",{"property":"article:tag","content":"学习"}],["meta",{"property":"article:tag","content":"C语言"}],["meta",{"property":"article:tag","content":"Linux内核"}],["meta",{"property":"article:modified_time","content":"2025-08-27T04:02:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C语言复习\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-27T04:02:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.45,"words":734},"git":{"updatedTime":1756267370000,"contributors":[{"name":"cloudinwind","username":"cloudinwind","email":"48953880+cloudinwind@users.noreply.github.com","commits":2,"avatar":"https://avatars.githubusercontent.com/cloudinwind?v=4","url":"https://github.com/cloudinwind"}]},"autoDesc":true,"filePathRelative":"work/C Program.md","categoryList":[{"id":"67e92c","sort":10000,"name":"work"}]}');export{k as comp,r as data};
